exec-ddl
CREATE TABLE ab (a INT PRIMARY KEY, b INT, INDEX (b))
----

exec-ddl
CREATE TABLE cd (c INT PRIMARY KEY, d INT)
----

build
SELECT * FROM ab JOIN cd ON b=c WHERE b>1
----
meh
select
 ├── columns: a:1!null b:2!null c:3!null d:4
 ├── key: (1)
 ├── fd: (1)-->(2), (3)-->(4), (2)==(3), (3)==(2)
 ├── inner-join (hash)
 │    ├── columns: a:1!null b:2!null c:3!null d:4
 │    ├── key: (1)
 │    ├── fd: (1)-->(2), (3)-->(4), (2)==(3), (3)==(2)
 │    ├── scan ab
 │    │    ├── columns: a:1!null b:2
 │    │    ├── key: (1)
 │    │    └── fd: (1)-->(2)
 │    ├── scan cd
 │    │    ├── columns: c:3!null d:4
 │    │    ├── key: (3)
 │    │    └── fd: (3)-->(4)
 │    └── filters
 │         └── b:2 = c:3 [outer=(2,3), constraints=(/2: (/NULL - ]; /3: (/NULL - ]), fd=(2)==(3), (3)==(2)]
 └── filters
      └── b:2 > 1 [outer=(2), constraints=(/2: [/2 - ]; tight)]

norm
SELECT * FROM ab JOIN cd ON b=c WHERE b>1
----
inner-join (hash)
 ├── columns: a:1!null b:2!null c:3!null d:4
 ├── key: (1)
 ├── fd: (1)-->(2), (3)-->(4), (2)==(3), (3)==(2)
 ├── select
 │    ├── columns: a:1!null b:2!null
 │    ├── key: (1)
 │    ├── fd: (1)-->(2)
 │    ├── scan ab
 │    │    ├── columns: a:1!null b:2
 │    │    ├── key: (1)
 │    │    └── fd: (1)-->(2)
 │    └── filters
 │         └── b:2 > 1 [outer=(2), constraints=(/2: [/2 - ]; tight)]
 ├── select
 │    ├── columns: c:3!null d:4
 │    ├── key: (3)
 │    ├── fd: (3)-->(4)
 │    ├── scan cd
 │    │    ├── columns: c:3!null d:4
 │    │    ├── key: (3)
 │    │    └── fd: (3)-->(4)
 │    └── filters
 │         └── c:3 > 1 [outer=(3), constraints=(/3: [/2 - ]; tight)]
 └── filters
      └── b:2 = c:3 [outer=(2,3), constraints=(/2: (/NULL - ]; /3: (/NULL - ]), fd=(2)==(3), (3)==(2)]

opt
SELECT * FROM ab JOIN cd ON b=c WHERE b>1
----
inner-join (merge)
 ├── columns: a:1!null b:2!null c:3!null d:4
 ├── left ordering: +2
 ├── right ordering: +3
 ├── key: (1)
 ├── fd: (1)-->(2), (3)-->(4), (2)==(3), (3)==(2)
 ├── scan ab@secondary
 │    ├── columns: a:1!null b:2!null
 │    ├── constraint: /2/1: [/2 - ]
 │    ├── key: (1)
 │    ├── fd: (1)-->(2)
 │    └── ordering: +2
 ├── scan cd
 │    ├── columns: c:3!null d:4
 │    ├── constraint: /3: [/2 - ]
 │    ├── key: (3)
 │    ├── fd: (3)-->(4)
 │    └── ordering: +3
 └── filters (true)

memo
SELECT * FROM ab JOIN cd ON b=c WHERE b>1
----
memo (optimized, ~14KB, required=[presentation: a:1,b:2,c:3,d:4])
 ├── G1: (inner-join G2 G3 G4) (inner-join G3 G2 G4) (merge-join G2 G3 G5 inner-join,+2,+3) (lookup-join G2 G6 cd,keyCols=[2],outCols=(1-4)) (merge-join G3 G2 G5 inner-join,+3,+2) (lookup-join G3 G7 ab@secondary,keyCols=[3],outCols=(1-4))
 │    └── [presentation: a:1,b:2,c:3,d:4]
 │         ├── best: (merge-join G2="[ordering: +2]" G3="[ordering: +3]" G5 inner-join,+2,+3)
 │         └── cost: 703.36
 ├── G2: (select G8 G7) (scan ab@secondary,constrained)
 │    ├── [ordering: +2]
 │    │    ├── best: (scan ab@secondary,constrained)
 │    │    └── cost: 346.68
 │    └── []
 │         ├── best: (scan ab@secondary,constrained)
 │         └── cost: 346.68
 ├── G3: (select G9 G6) (scan cd,constrained)
 │    ├── [ordering: +3]
 │    │    ├── best: (scan cd,constrained)
 │    │    └── cost: 346.68
 │    └── []
 │         ├── best: (scan cd,constrained)
 │         └── cost: 346.68
 ├── G4: (filters G10)
 ├── G5: (filters)
 ├── G6: (filters G11)
 ├── G7: (filters G12)
 ├── G8: (scan ab) (scan ab@secondary)
 │    ├── [ordering: +2]
 │    │    ├── best: (scan ab@secondary)
 │    │    └── cost: 1040.02
 │    └── []
 │         ├── best: (scan ab)
 │         └── cost: 1040.02
 ├── G9: (scan cd)
 │    ├── [ordering: +3]
 │    │    ├── best: (scan cd)
 │    │    └── cost: 1040.02
 │    └── []
 │         ├── best: (scan cd)
 │         └── cost: 1040.02
 ├── G10: (eq G13 G14)
 ├── G11: (gt G14 G15)
 ├── G12: (gt G13 G15)
 ├── G13: (variable b)
 ├── G14: (variable c)
 └── G15: (const 1)

optsteps
SELECT * FROM ab JOIN cd ON b=c WHERE b>1
----
================================================================================
Initial expression
  Cost: 2129.86
================================================================================
  select
   ├── columns: a:1!null b:2!null c:3!null d:4
   ├── key: (1)
   ├── fd: (1)-->(2), (3)-->(4), (2)==(3), (3)==(2)
   ├── inner-join (hash)
   │    ├── columns: a:1!null b:2!null c:3!null d:4
   │    ├── key: (1)
   │    ├── fd: (1)-->(2), (3)-->(4), (2)==(3), (3)==(2)
   │    ├── scan ab
   │    │    ├── columns: a:1!null b:2
   │    │    ├── key: (1)
   │    │    └── fd: (1)-->(2)
   │    ├── scan cd
   │    │    ├── columns: c:3!null d:4
   │    │    ├── key: (3)
   │    │    └── fd: (3)-->(4)
   │    └── filters
   │         └── b:2 = c:3 [outer=(2,3), constraints=(/2: (/NULL - ]; /3: (/NULL - ]), fd=(2)==(3), (3)==(2)]
   └── filters
        └── b:2 > 1 [outer=(2), constraints=(/2: [/2 - ]; tight)]
================================================================================
MergeSelectInnerJoin
  Cost: 2119.95
================================================================================
  -select
  +inner-join (hash)
    ├── columns: a:1!null b:2!null c:3!null d:4
    ├── key: (1)
    ├── fd: (1)-->(2), (3)-->(4), (2)==(3), (3)==(2)
  - ├── inner-join (hash)
  - │    ├── columns: a:1!null b:2!null c:3!null d:4
  + ├── scan ab
  + │    ├── columns: a:1!null b:2
    │    ├── key: (1)
  - │    ├── fd: (1)-->(2), (3)-->(4), (2)==(3), (3)==(2)
  - │    ├── scan ab
  - │    │    ├── columns: a:1!null b:2
  - │    │    ├── key: (1)
  - │    │    └── fd: (1)-->(2)
  - │    ├── scan cd
  - │    │    ├── columns: c:3!null d:4
  - │    │    ├── key: (3)
  - │    │    └── fd: (3)-->(4)
  - │    └── filters
  - │         └── b:2 = c:3 [outer=(2,3), constraints=(/2: (/NULL - ]; /3: (/NULL - ]), fd=(2)==(3), (3)==(2)]
  + │    └── fd: (1)-->(2)
  + ├── scan cd
  + │    ├── columns: c:3!null d:4
  + │    ├── key: (3)
  + │    └── fd: (3)-->(4)
    └── filters
  +      ├── b:2 = c:3 [outer=(2,3), constraints=(/2: (/NULL - ]; /3: (/NULL - ]), fd=(2)==(3), (3)==(2)]
         └── b:2 > 1 [outer=(2), constraints=(/2: [/2 - ]; tight)]
================================================================================
PushFilterIntoJoinLeftAndRight
  Cost: 2113.40
================================================================================
   inner-join (hash)
    ├── columns: a:1!null b:2!null c:3!null d:4
    ├── key: (1)
    ├── fd: (1)-->(2), (3)-->(4), (2)==(3), (3)==(2)
  - ├── scan ab
  - │    ├── columns: a:1!null b:2
  + ├── select
  + │    ├── columns: a:1!null b:2!null
    │    ├── key: (1)
  - │    └── fd: (1)-->(2)
  - ├── scan cd
  + │    ├── fd: (1)-->(2)
  + │    ├── scan ab
  + │    │    ├── columns: a:1!null b:2
  + │    │    ├── key: (1)
  + │    │    └── fd: (1)-->(2)
  + │    └── filters
  + │         └── b:2 > 1 [outer=(2), constraints=(/2: [/2 - ]; tight)]
  + ├── select
    │    ├── columns: c:3!null d:4
    │    ├── key: (3)
  - │    └── fd: (3)-->(4)
  + │    ├── fd: (3)-->(4)
  + │    ├── scan cd
  + │    │    ├── columns: c:3!null d:4
  + │    │    ├── key: (3)
  + │    │    └── fd: (3)-->(4)
  + │    └── filters
  + │         └── c:3 > 1 [outer=(3), constraints=(/3: [/2 - ]; tight)]
    └── filters
  -      ├── b:2 = c:3 [outer=(2,3), constraints=(/2: (/NULL - ]; /3: (/NULL - ]), fd=(2)==(3), (3)==(2)]
  -      └── b:2 > 1 [outer=(2), constraints=(/2: [/2 - ]; tight)]
  +      └── b:2 = c:3 [outer=(2,3), constraints=(/2: (/NULL - ]; /3: (/NULL - ]), fd=(2)==(3), (3)==(2)]
--------------------------------------------------------------------------------
GenerateIndexScans (higher cost)
--------------------------------------------------------------------------------
   inner-join (hash)
    ├── columns: a:1!null b:2!null c:3!null d:4
    ├── key: (1)
    ├── fd: (1)-->(2), (3)-->(4), (2)==(3), (3)==(2)
    ├── select
    │    ├── columns: a:1!null b:2!null
    │    ├── key: (1)
    │    ├── fd: (1)-->(2)
  - │    ├── scan ab
  + │    ├── scan ab@secondary
    │    │    ├── columns: a:1!null b:2
    │    │    ├── key: (1)
    │    │    └── fd: (1)-->(2)
    │    └── filters
    │         └── b:2 > 1 [outer=(2), constraints=(/2: [/2 - ]; tight)]
    ├── select
    │    ├── columns: c:3!null d:4
    │    ├── key: (3)
    │    ├── fd: (3)-->(4)
    │    ├── scan cd
    │    │    ├── columns: c:3!null d:4
    │    │    ├── key: (3)
    │    │    └── fd: (3)-->(4)
    │    └── filters
    │         └── c:3 > 1 [outer=(3), constraints=(/3: [/2 - ]; tight)]
    └── filters
         └── b:2 = c:3 [outer=(2,3), constraints=(/2: (/NULL - ]; /3: (/NULL - ]), fd=(2)==(3), (3)==(2)]
--------------------------------------------------------------------------------
GenerateZigzagJoins (no changes)
--------------------------------------------------------------------------------
================================================================================
GenerateConstrainedScans
  Cost: 1410.05
================================================================================
   inner-join (hash)
    ├── columns: a:1!null b:2!null c:3!null d:4
    ├── key: (1)
    ├── fd: (1)-->(2), (3)-->(4), (2)==(3), (3)==(2)
  - ├── select
  + ├── scan ab@secondary
    │    ├── columns: a:1!null b:2!null
  + │    ├── constraint: /2/1: [/2 - ]
    │    ├── key: (1)
  - │    ├── fd: (1)-->(2)
  - │    ├── scan ab
  - │    │    ├── columns: a:1!null b:2
  - │    │    ├── key: (1)
  - │    │    └── fd: (1)-->(2)
  - │    └── filters
  - │         └── b:2 > 1 [outer=(2), constraints=(/2: [/2 - ]; tight)]
  + │    └── fd: (1)-->(2)
    ├── select
    │    ├── columns: c:3!null d:4
    │    ├── key: (3)
    │    ├── fd: (3)-->(4)
    │    ├── scan cd
    │    │    ├── columns: c:3!null d:4
    │    │    ├── key: (3)
    │    │    └── fd: (3)-->(4)
    │    └── filters
    │         └── c:3 > 1 [outer=(3), constraints=(/3: [/2 - ]; tight)]
    └── filters
         └── b:2 = c:3 [outer=(2,3), constraints=(/2: (/NULL - ]; /3: (/NULL - ]), fd=(2)==(3), (3)==(2)]
--------------------------------------------------------------------------------
GenerateIndexScans (no changes)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
GenerateZigzagJoins (no changes)
--------------------------------------------------------------------------------
================================================================================
GenerateConstrainedScans
  Cost: 706.70
================================================================================
   inner-join (hash)
    ├── columns: a:1!null b:2!null c:3!null d:4
    ├── key: (1)
    ├── fd: (1)-->(2), (3)-->(4), (2)==(3), (3)==(2)
    ├── scan ab@secondary
    │    ├── columns: a:1!null b:2!null
    │    ├── constraint: /2/1: [/2 - ]
    │    ├── key: (1)
    │    └── fd: (1)-->(2)
  - ├── select
  + ├── scan cd
    │    ├── columns: c:3!null d:4
  + │    ├── constraint: /3: [/2 - ]
    │    ├── key: (3)
  - │    ├── fd: (3)-->(4)
  - │    ├── scan cd
  - │    │    ├── columns: c:3!null d:4
  - │    │    ├── key: (3)
  - │    │    └── fd: (3)-->(4)
  - │    └── filters
  - │         └── c:3 > 1 [outer=(3), constraints=(/3: [/2 - ]; tight)]
  + │    └── fd: (3)-->(4)
    └── filters
         └── b:2 = c:3 [outer=(2,3), constraints=(/2: (/NULL - ]; /3: (/NULL - ]), fd=(2)==(3), (3)==(2)]
--------------------------------------------------------------------------------
CommuteJoin (higher cost)
--------------------------------------------------------------------------------
   inner-join (hash)
    ├── columns: a:1!null b:2!null c:3!null d:4
    ├── key: (1)
    ├── fd: (1)-->(2), (3)-->(4), (2)==(3), (3)==(2)
  + ├── scan cd
  + │    ├── columns: c:3!null d:4
  + │    ├── constraint: /3: [/2 - ]
  + │    ├── key: (3)
  + │    └── fd: (3)-->(4)
    ├── scan ab@secondary
    │    ├── columns: a:1!null b:2!null
    │    ├── constraint: /2/1: [/2 - ]
    │    ├── key: (1)
    │    └── fd: (1)-->(2)
  - ├── scan cd
  - │    ├── columns: c:3!null d:4
  - │    ├── constraint: /3: [/2 - ]
  - │    ├── key: (3)
  - │    └── fd: (3)-->(4)
    └── filters
         └── b:2 = c:3 [outer=(2,3), constraints=(/2: (/NULL - ]; /3: (/NULL - ]), fd=(2)==(3), (3)==(2)]
================================================================================
GenerateMergeJoins
  Cost: 703.36
================================================================================
  -inner-join (hash)
  +inner-join (merge)
    ├── columns: a:1!null b:2!null c:3!null d:4
  + ├── left ordering: +2
  + ├── right ordering: +3
    ├── key: (1)
    ├── fd: (1)-->(2), (3)-->(4), (2)==(3), (3)==(2)
    ├── scan ab@secondary
    │    ├── columns: a:1!null b:2!null
    │    ├── constraint: /2/1: [/2 - ]
    │    ├── key: (1)
  - │    └── fd: (1)-->(2)
  + │    ├── fd: (1)-->(2)
  + │    └── ordering: +2
    ├── scan cd
    │    ├── columns: c:3!null d:4
    │    ├── constraint: /3: [/2 - ]
    │    ├── key: (3)
  - │    └── fd: (3)-->(4)
  - └── filters
  -      └── b:2 = c:3 [outer=(2,3), constraints=(/2: (/NULL - ]; /3: (/NULL - ]), fd=(2)==(3), (3)==(2)]
  + │    ├── fd: (3)-->(4)
  + │    └── ordering: +3
  + └── filters (true)
--------------------------------------------------------------------------------
GenerateLookupJoinsWithFilter (higher cost)
--------------------------------------------------------------------------------
  -inner-join (merge)
  +inner-join (lookup cd)
    ├── columns: a:1!null b:2!null c:3!null d:4
  - ├── left ordering: +2
  - ├── right ordering: +3
  + ├── key columns: [2] = [3]
  + ├── lookup columns are key
    ├── key: (1)
    ├── fd: (1)-->(2), (3)-->(4), (2)==(3), (3)==(2)
    ├── scan ab@secondary
    │    ├── columns: a:1!null b:2!null
    │    ├── constraint: /2/1: [/2 - ]
    │    ├── key: (1)
  - │    ├── fd: (1)-->(2)
  - │    └── ordering: +2
  - ├── scan cd
  - │    ├── columns: c:3!null d:4
  - │    ├── constraint: /3: [/2 - ]
  - │    ├── key: (3)
  - │    ├── fd: (3)-->(4)
  - │    └── ordering: +3
  - └── filters (true)
  + │    └── fd: (1)-->(2)
  + └── filters
  +      └── c:3 > 1 [outer=(3), constraints=(/3: [/2 - ]; tight)]
--------------------------------------------------------------------------------
CommuteJoin (no changes)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
GenerateMergeJoins (higher cost)
--------------------------------------------------------------------------------
   inner-join (merge)
    ├── columns: a:1!null b:2!null c:3!null d:4
  - ├── left ordering: +2
  - ├── right ordering: +3
  + ├── left ordering: +3
  + ├── right ordering: +2
    ├── key: (1)
    ├── fd: (1)-->(2), (3)-->(4), (2)==(3), (3)==(2)
  + ├── scan cd
  + │    ├── columns: c:3!null d:4
  + │    ├── constraint: /3: [/2 - ]
  + │    ├── key: (3)
  + │    ├── fd: (3)-->(4)
  + │    └── ordering: +3
    ├── scan ab@secondary
    │    ├── columns: a:1!null b:2!null
    │    ├── constraint: /2/1: [/2 - ]
    │    ├── key: (1)
    │    ├── fd: (1)-->(2)
    │    └── ordering: +2
  - ├── scan cd
  - │    ├── columns: c:3!null d:4
  - │    ├── constraint: /3: [/2 - ]
  - │    ├── key: (3)
  - │    ├── fd: (3)-->(4)
  - │    └── ordering: +3
    └── filters (true)
--------------------------------------------------------------------------------
GenerateLookupJoinsWithFilter (higher cost)
--------------------------------------------------------------------------------
  -inner-join (merge)
  +inner-join (lookup ab@secondary)
    ├── columns: a:1!null b:2!null c:3!null d:4
  - ├── left ordering: +3
  - ├── right ordering: +2
  + ├── key columns: [3] = [2]
    ├── key: (1)
    ├── fd: (1)-->(2), (3)-->(4), (2)==(3), (3)==(2)
    ├── scan cd
    │    ├── columns: c:3!null d:4
    │    ├── constraint: /3: [/2 - ]
    │    ├── key: (3)
  - │    ├── fd: (3)-->(4)
  - │    └── ordering: +3
  - ├── scan ab@secondary
  - │    ├── columns: a:1!null b:2!null
  - │    ├── constraint: /2/1: [/2 - ]
  - │    ├── key: (1)
  - │    ├── fd: (1)-->(2)
  - │    └── ordering: +2
  - └── filters (true)
  + │    └── fd: (3)-->(4)
  + └── filters
  +      └── b:2 > 1 [outer=(2), constraints=(/2: [/2 - ]; tight)]
================================================================================
Final best expression
  Cost: 703.36
================================================================================
  inner-join (merge)
   ├── columns: a:1!null b:2!null c:3!null d:4
   ├── left ordering: +2
   ├── right ordering: +3
   ├── key: (1)
   ├── fd: (1)-->(2), (3)-->(4), (2)==(3), (3)==(2)
   ├── scan ab@secondary
   │    ├── columns: a:1!null b:2!null
   │    ├── constraint: /2/1: [/2 - ]
   │    ├── key: (1)
   │    ├── fd: (1)-->(2)
   │    └── ordering: +2
   ├── scan cd
   │    ├── columns: c:3!null d:4
   │    ├── constraint: /3: [/2 - ]
   │    ├── key: (3)
   │    ├── fd: (3)-->(4)
   │    └── ordering: +3
   └── filters (true)

exploretrace
SELECT * FROM ab JOIN cd ON b=c WHERE b>1
----
----
================================================================================
GenerateIndexScans
================================================================================
Source expression:
  inner-join (hash)
   ├── columns: a:1!null b:2!null c:3!null d:4
   ├── key: (1)
   ├── fd: (1)-->(2), (3)-->(4), (2)==(3), (3)==(2)
   ├── select
   │    ├── columns: a:1!null b:2!null
   │    ├── key: (1)
   │    ├── fd: (1)-->(2)
   │    ├── scan ab
   │    │    ├── columns: a:1!null b:2
   │    │    ├── key: (1)
   │    │    └── fd: (1)-->(2)
   │    └── filters
   │         └── b:2 > 1 [outer=(2), constraints=(/2: [/2 - ]; tight)]
   ├── select
   │    ├── columns: c:3!null d:4
   │    ├── key: (3)
   │    ├── fd: (3)-->(4)
   │    ├── scan cd
   │    │    ├── columns: c:3!null d:4
   │    │    ├── key: (3)
   │    │    └── fd: (3)-->(4)
   │    └── filters
   │         └── c:3 > 1 [outer=(3), constraints=(/3: [/2 - ]; tight)]
   └── filters
        └── b:2 = c:3 [outer=(2,3), constraints=(/2: (/NULL - ]; /3: (/NULL - ]), fd=(2)==(3), (3)==(2)]

New expression 1 of 1:
  inner-join (hash)
   ├── columns: a:1!null b:2!null c:3!null d:4
   ├── key: (1)
   ├── fd: (1)-->(2), (3)-->(4), (2)==(3), (3)==(2)
   ├── select
   │    ├── columns: a:1!null b:2!null
   │    ├── key: (1)
   │    ├── fd: (1)-->(2)
   │    ├── scan ab@secondary
   │    │    ├── columns: a:1!null b:2
   │    │    ├── key: (1)
   │    │    └── fd: (1)-->(2)
   │    └── filters
   │         └── b:2 > 1 [outer=(2), constraints=(/2: [/2 - ]; tight)]
   ├── select
   │    ├── columns: c:3!null d:4
   │    ├── key: (3)
   │    ├── fd: (3)-->(4)
   │    ├── scan cd
   │    │    ├── columns: c:3!null d:4
   │    │    ├── key: (3)
   │    │    └── fd: (3)-->(4)
   │    └── filters
   │         └── c:3 > 1 [outer=(3), constraints=(/3: [/2 - ]; tight)]
   └── filters
        └── b:2 = c:3 [outer=(2,3), constraints=(/2: (/NULL - ]; /3: (/NULL - ]), fd=(2)==(3), (3)==(2)]

================================================================================
GenerateZigzagJoins
================================================================================
Source expression:
  inner-join (hash)
   ├── columns: a:1!null b:2!null c:3!null d:4
   ├── key: (1)
   ├── fd: (1)-->(2), (3)-->(4), (2)==(3), (3)==(2)
   ├── select
   │    ├── columns: a:1!null b:2!null
   │    ├── key: (1)
   │    ├── fd: (1)-->(2)
   │    ├── scan ab
   │    │    ├── columns: a:1!null b:2
   │    │    ├── key: (1)
   │    │    └── fd: (1)-->(2)
   │    └── filters
   │         └── b:2 > 1 [outer=(2), constraints=(/2: [/2 - ]; tight)]
   ├── select
   │    ├── columns: c:3!null d:4
   │    ├── key: (3)
   │    ├── fd: (3)-->(4)
   │    ├── scan cd
   │    │    ├── columns: c:3!null d:4
   │    │    ├── key: (3)
   │    │    └── fd: (3)-->(4)
   │    └── filters
   │         └── c:3 > 1 [outer=(3), constraints=(/3: [/2 - ]; tight)]
   └── filters
        └── b:2 = c:3 [outer=(2,3), constraints=(/2: (/NULL - ]; /3: (/NULL - ]), fd=(2)==(3), (3)==(2)]

No new expressions.

================================================================================
GenerateConstrainedScans
================================================================================
Source expression:
  inner-join (hash)
   ├── columns: a:1!null b:2!null c:3!null d:4
   ├── key: (1)
   ├── fd: (1)-->(2), (3)-->(4), (2)==(3), (3)==(2)
   ├── select
   │    ├── columns: a:1!null b:2!null
   │    ├── key: (1)
   │    ├── fd: (1)-->(2)
   │    ├── scan ab
   │    │    ├── columns: a:1!null b:2
   │    │    ├── key: (1)
   │    │    └── fd: (1)-->(2)
   │    └── filters
   │         └── b:2 > 1 [outer=(2), constraints=(/2: [/2 - ]; tight)]
   ├── select
   │    ├── columns: c:3!null d:4
   │    ├── key: (3)
   │    ├── fd: (3)-->(4)
   │    ├── scan cd
   │    │    ├── columns: c:3!null d:4
   │    │    ├── key: (3)
   │    │    └── fd: (3)-->(4)
   │    └── filters
   │         └── c:3 > 1 [outer=(3), constraints=(/3: [/2 - ]; tight)]
   └── filters
        └── b:2 = c:3 [outer=(2,3), constraints=(/2: (/NULL - ]; /3: (/NULL - ]), fd=(2)==(3), (3)==(2)]

New expression 1 of 1:
  inner-join (hash)
   ├── columns: a:1!null b:2!null c:3!null d:4
   ├── key: (1)
   ├── fd: (1)-->(2), (3)-->(4), (2)==(3), (3)==(2)
   ├── scan ab@secondary
   │    ├── columns: a:1!null b:2!null
   │    ├── constraint: /2/1: [/2 - ]
   │    ├── key: (1)
   │    └── fd: (1)-->(2)
   ├── select
   │    ├── columns: c:3!null d:4
   │    ├── key: (3)
   │    ├── fd: (3)-->(4)
   │    ├── scan cd
   │    │    ├── columns: c:3!null d:4
   │    │    ├── key: (3)
   │    │    └── fd: (3)-->(4)
   │    └── filters
   │         └── c:3 > 1 [outer=(3), constraints=(/3: [/2 - ]; tight)]
   └── filters
        └── b:2 = c:3 [outer=(2,3), constraints=(/2: (/NULL - ]; /3: (/NULL - ]), fd=(2)==(3), (3)==(2)]

================================================================================
GenerateIndexScans
================================================================================
Source expression:
  inner-join (hash)
   ├── columns: a:1!null b:2!null c:3!null d:4
   ├── key: (1)
   ├── fd: (1)-->(2), (3)-->(4), (2)==(3), (3)==(2)
   ├── scan ab@secondary
   │    ├── columns: a:1!null b:2!null
   │    ├── constraint: /2/1: [/2 - ]
   │    ├── key: (1)
   │    └── fd: (1)-->(2)
   ├── select
   │    ├── columns: c:3!null d:4
   │    ├── key: (3)
   │    ├── fd: (3)-->(4)
   │    ├── scan cd
   │    │    ├── columns: c:3!null d:4
   │    │    ├── key: (3)
   │    │    └── fd: (3)-->(4)
   │    └── filters
   │         └── c:3 > 1 [outer=(3), constraints=(/3: [/2 - ]; tight)]
   └── filters
        └── b:2 = c:3 [outer=(2,3), constraints=(/2: (/NULL - ]; /3: (/NULL - ]), fd=(2)==(3), (3)==(2)]

No new expressions.

================================================================================
GenerateZigzagJoins
================================================================================
Source expression:
  inner-join (hash)
   ├── columns: a:1!null b:2!null c:3!null d:4
   ├── key: (1)
   ├── fd: (1)-->(2), (3)-->(4), (2)==(3), (3)==(2)
   ├── scan ab@secondary
   │    ├── columns: a:1!null b:2!null
   │    ├── constraint: /2/1: [/2 - ]
   │    ├── key: (1)
   │    └── fd: (1)-->(2)
   ├── select
   │    ├── columns: c:3!null d:4
   │    ├── key: (3)
   │    ├── fd: (3)-->(4)
   │    ├── scan cd
   │    │    ├── columns: c:3!null d:4
   │    │    ├── key: (3)
   │    │    └── fd: (3)-->(4)
   │    └── filters
   │         └── c:3 > 1 [outer=(3), constraints=(/3: [/2 - ]; tight)]
   └── filters
        └── b:2 = c:3 [outer=(2,3), constraints=(/2: (/NULL - ]; /3: (/NULL - ]), fd=(2)==(3), (3)==(2)]

No new expressions.

================================================================================
GenerateConstrainedScans
================================================================================
Source expression:
  inner-join (hash)
   ├── columns: a:1!null b:2!null c:3!null d:4
   ├── key: (1)
   ├── fd: (1)-->(2), (3)-->(4), (2)==(3), (3)==(2)
   ├── scan ab@secondary
   │    ├── columns: a:1!null b:2!null
   │    ├── constraint: /2/1: [/2 - ]
   │    ├── key: (1)
   │    └── fd: (1)-->(2)
   ├── select
   │    ├── columns: c:3!null d:4
   │    ├── key: (3)
   │    ├── fd: (3)-->(4)
   │    ├── scan cd
   │    │    ├── columns: c:3!null d:4
   │    │    ├── key: (3)
   │    │    └── fd: (3)-->(4)
   │    └── filters
   │         └── c:3 > 1 [outer=(3), constraints=(/3: [/2 - ]; tight)]
   └── filters
        └── b:2 = c:3 [outer=(2,3), constraints=(/2: (/NULL - ]; /3: (/NULL - ]), fd=(2)==(3), (3)==(2)]

New expression 1 of 1:
  inner-join (hash)
   ├── columns: a:1!null b:2!null c:3!null d:4
   ├── key: (1)
   ├── fd: (1)-->(2), (3)-->(4), (2)==(3), (3)==(2)
   ├── scan ab@secondary
   │    ├── columns: a:1!null b:2!null
   │    ├── constraint: /2/1: [/2 - ]
   │    ├── key: (1)
   │    └── fd: (1)-->(2)
   ├── scan cd
   │    ├── columns: c:3!null d:4
   │    ├── constraint: /3: [/2 - ]
   │    ├── key: (3)
   │    └── fd: (3)-->(4)
   └── filters
        └── b:2 = c:3 [outer=(2,3), constraints=(/2: (/NULL - ]; /3: (/NULL - ]), fd=(2)==(3), (3)==(2)]

================================================================================
CommuteJoin
================================================================================
Source expression:
  inner-join (hash)
   ├── columns: a:1!null b:2!null c:3!null d:4
   ├── key: (1)
   ├── fd: (1)-->(2), (3)-->(4), (2)==(3), (3)==(2)
   ├── scan ab@secondary
   │    ├── columns: a:1!null b:2!null
   │    ├── constraint: /2/1: [/2 - ]
   │    ├── key: (1)
   │    └── fd: (1)-->(2)
   ├── scan cd
   │    ├── columns: c:3!null d:4
   │    ├── constraint: /3: [/2 - ]
   │    ├── key: (3)
   │    └── fd: (3)-->(4)
   └── filters
        └── b:2 = c:3 [outer=(2,3), constraints=(/2: (/NULL - ]; /3: (/NULL - ]), fd=(2)==(3), (3)==(2)]

New expression 1 of 1:
  inner-join (hash)
   ├── columns: a:1!null b:2!null c:3!null d:4
   ├── key: (1)
   ├── fd: (1)-->(2), (3)-->(4), (2)==(3), (3)==(2)
   ├── scan cd
   │    ├── columns: c:3!null d:4
   │    ├── constraint: /3: [/2 - ]
   │    ├── key: (3)
   │    └── fd: (3)-->(4)
   ├── scan ab@secondary
   │    ├── columns: a:1!null b:2!null
   │    ├── constraint: /2/1: [/2 - ]
   │    ├── key: (1)
   │    └── fd: (1)-->(2)
   └── filters
        └── b:2 = c:3 [outer=(2,3), constraints=(/2: (/NULL - ]; /3: (/NULL - ]), fd=(2)==(3), (3)==(2)]

================================================================================
GenerateMergeJoins
================================================================================
Source expression:
  inner-join (hash)
   ├── columns: a:1!null b:2!null c:3!null d:4
   ├── key: (1)
   ├── fd: (1)-->(2), (3)-->(4), (2)==(3), (3)==(2)
   ├── scan ab@secondary
   │    ├── columns: a:1!null b:2!null
   │    ├── constraint: /2/1: [/2 - ]
   │    ├── key: (1)
   │    └── fd: (1)-->(2)
   ├── scan cd
   │    ├── columns: c:3!null d:4
   │    ├── constraint: /3: [/2 - ]
   │    ├── key: (3)
   │    └── fd: (3)-->(4)
   └── filters
        └── b:2 = c:3 [outer=(2,3), constraints=(/2: (/NULL - ]; /3: (/NULL - ]), fd=(2)==(3), (3)==(2)]

New expression 1 of 1:
  inner-join (merge)
   ├── columns: a:1!null b:2!null c:3!null d:4
   ├── left ordering: +2
   ├── right ordering: +3
   ├── key: (1)
   ├── fd: (1)-->(2), (3)-->(4), (2)==(3), (3)==(2)
   ├── scan ab@secondary
   │    ├── columns: a:1!null b:2!null
   │    ├── constraint: /2/1: [/2 - ]
   │    ├── key: (1)
   │    ├── fd: (1)-->(2)
   │    └── ordering: +2
   ├── scan cd
   │    ├── columns: c:3!null d:4
   │    ├── constraint: /3: [/2 - ]
   │    ├── key: (3)
   │    ├── fd: (3)-->(4)
   │    └── ordering: +3
   └── filters (true)

================================================================================
GenerateLookupJoinsWithFilter
================================================================================
Source expression:
  inner-join (hash)
   ├── columns: a:1!null b:2!null c:3!null d:4
   ├── key: (1)
   ├── fd: (1)-->(2), (3)-->(4), (2)==(3), (3)==(2)
   ├── scan ab@secondary
   │    ├── columns: a:1!null b:2!null
   │    ├── constraint: /2/1: [/2 - ]
   │    ├── key: (1)
   │    └── fd: (1)-->(2)
   ├── scan cd
   │    ├── columns: c:3!null d:4
   │    ├── constraint: /3: [/2 - ]
   │    ├── key: (3)
   │    └── fd: (3)-->(4)
   └── filters
        └── b:2 = c:3 [outer=(2,3), constraints=(/2: (/NULL - ]; /3: (/NULL - ]), fd=(2)==(3), (3)==(2)]

New expression 1 of 1:
  inner-join (lookup cd)
   ├── columns: a:1!null b:2!null c:3!null d:4
   ├── key columns: [2] = [3]
   ├── lookup columns are key
   ├── key: (1)
   ├── fd: (1)-->(2), (3)-->(4), (2)==(3), (3)==(2)
   ├── scan ab@secondary
   │    ├── columns: a:1!null b:2!null
   │    ├── constraint: /2/1: [/2 - ]
   │    ├── key: (1)
   │    └── fd: (1)-->(2)
   └── filters
        └── c:3 > 1 [outer=(3), constraints=(/3: [/2 - ]; tight)]

================================================================================
CommuteJoin
================================================================================
Source expression:
  inner-join (hash)
   ├── columns: a:1!null b:2!null c:3!null d:4
   ├── key: (1)
   ├── fd: (1)-->(2), (3)-->(4), (2)==(3), (3)==(2)
   ├── scan cd
   │    ├── columns: c:3!null d:4
   │    ├── constraint: /3: [/2 - ]
   │    ├── key: (3)
   │    └── fd: (3)-->(4)
   ├── scan ab@secondary
   │    ├── columns: a:1!null b:2!null
   │    ├── constraint: /2/1: [/2 - ]
   │    ├── key: (1)
   │    └── fd: (1)-->(2)
   └── filters
        └── b:2 = c:3 [outer=(2,3), constraints=(/2: (/NULL - ]; /3: (/NULL - ]), fd=(2)==(3), (3)==(2)]

No new expressions.

================================================================================
GenerateMergeJoins
================================================================================
Source expression:
  inner-join (hash)
   ├── columns: a:1!null b:2!null c:3!null d:4
   ├── key: (1)
   ├── fd: (1)-->(2), (3)-->(4), (2)==(3), (3)==(2)
   ├── scan cd
   │    ├── columns: c:3!null d:4
   │    ├── constraint: /3: [/2 - ]
   │    ├── key: (3)
   │    └── fd: (3)-->(4)
   ├── scan ab@secondary
   │    ├── columns: a:1!null b:2!null
   │    ├── constraint: /2/1: [/2 - ]
   │    ├── key: (1)
   │    └── fd: (1)-->(2)
   └── filters
        └── b:2 = c:3 [outer=(2,3), constraints=(/2: (/NULL - ]; /3: (/NULL - ]), fd=(2)==(3), (3)==(2)]

New expression 1 of 1:
  inner-join (merge)
   ├── columns: a:1!null b:2!null c:3!null d:4
   ├── left ordering: +3
   ├── right ordering: +2
   ├── key: (1)
   ├── fd: (1)-->(2), (3)-->(4), (2)==(3), (3)==(2)
   ├── scan cd
   │    ├── columns: c:3!null d:4
   │    ├── constraint: /3: [/2 - ]
   │    ├── key: (3)
   │    ├── fd: (3)-->(4)
   │    └── ordering: +3
   ├── scan ab@secondary
   │    ├── columns: a:1!null b:2!null
   │    ├── constraint: /2/1: [/2 - ]
   │    ├── key: (1)
   │    ├── fd: (1)-->(2)
   │    └── ordering: +2
   └── filters (true)

================================================================================
GenerateLookupJoinsWithFilter
================================================================================
Source expression:
  inner-join (hash)
   ├── columns: a:1!null b:2!null c:3!null d:4
   ├── key: (1)
   ├── fd: (1)-->(2), (3)-->(4), (2)==(3), (3)==(2)
   ├── scan cd
   │    ├── columns: c:3!null d:4
   │    ├── constraint: /3: [/2 - ]
   │    ├── key: (3)
   │    └── fd: (3)-->(4)
   ├── scan ab@secondary
   │    ├── columns: a:1!null b:2!null
   │    ├── constraint: /2/1: [/2 - ]
   │    ├── key: (1)
   │    └── fd: (1)-->(2)
   └── filters
        └── b:2 = c:3 [outer=(2,3), constraints=(/2: (/NULL - ]; /3: (/NULL - ]), fd=(2)==(3), (3)==(2)]

New expression 1 of 1:
  inner-join (lookup ab@secondary)
   ├── columns: a:1!null b:2!null c:3!null d:4
   ├── key columns: [3] = [2]
   ├── key: (1)
   ├── fd: (1)-->(2), (3)-->(4), (2)==(3), (3)==(2)
   ├── scan cd
   │    ├── columns: c:3!null d:4
   │    ├── constraint: /3: [/2 - ]
   │    ├── key: (3)
   │    └── fd: (3)-->(4)
   └── filters
        └── b:2 > 1 [outer=(2), constraints=(/2: [/2 - ]; tight)]
----
----
